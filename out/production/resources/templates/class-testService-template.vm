package br.com.abgsolucoes.test.dao;

import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import java.sql.Timestamp;
import java.util.List;
import org.apache.commons.lang.NotImplementedException;

/**
 * Created by adrian on ${dataCriacao}.
 */
@ContextConfiguration(classes = {${nomeDaoCamel}.class, ${nomeServiceCamel}Impl.class })
public class ${nomeCrudCamel}ServiceTest extends AbstractUtilTest {

    @Autowired
    private ${nomeServiceCamel} ${nomeService};

    @Test
    public void shouldSaveTest(){
        ${nomeVOCamel} vo = new ${nomeVOCamel}();
        #foreach($c in $listaSettersEntity)
            #if($c.parameters[0] == "java.lang.Integer arg0")
            vo.${c.name}(2);
            #elseif($c.parameters[0] == "java.lang.String arg0")
            vo.${c.name}("Aleatorio");
            #elseif($c.parameters[0] == "java.lang.Double arg0")
            vo.${c.name}(new Double(2.3));
            #elseif($c.parameters[0] == "java.sql.Timestamp arg0")
            vo.${c.name}(new Timestamp(System.currentTimeMillis()));
            #elseif($c.parameters[0] == "java.lang.Boolean arg0")
            vo.${c.name}(true);
            #elseif($c.parameters[0] == "java.lang.Long arg0")
            vo.${c.name}(3l);
            #end
        #end

        ${nomeService}.save(entity);
        throw new NotImplementedException();
    }
    @Test
    public void shouldDetailsTest(){
        ${nomeVOCamel} entity  = ${nomeService}.findOne(2);
        //Asserts
        throw new NotImplementedException();
    }
    @Test
    public void shouldListTest(){
        List<${nomeVOCamel}> vo  = ${nomeService}.findAll();
        throw new NotImplementedException();
    }
    @Test
    public void shouldUpdateTest(){
        throw new NotImplementedException();
    }
    @Test
    public void shouldDeleteTest(){
         //${nomeDao}.delete(10000);
        throw new NotImplementedException();
    }
    @Test
    public void shouldLoadByIdTest(){
        ${nomeVOCamel} vo  = ${nomeService}.findOne(2);
        throw new NotImplementedException();
    }
}

